---
// AdminLogin.astro

const API_URL = import.meta.env.PUBLIC_API_URL || "http://localhost:3000";

// Logique côté serveur (si nécessaire)
// Par exemple, redirection côté serveur si déjà connecté
// Mais attention : localStorage n'est pas accessible côté serveur
---

<div
  class="min-h-screen flex items-center justify-center bg-gradient-to-br from-glehi-lightest via-glehi-light2 to-glehi-light1 py-12 px-4"
>
  <div class="max-w-md w-full space-y-8">
    <!-- Header -->
    <div class="text-center">
      <div
        class="mx-auto h-16 w-16 bg-gradient-to-br from-glehi-medium to-glehi-kaki rounded-full flex items-center justify-center mb-6 shadow-lg"
      >
        <svg
          class="h-8 w-8 text-white"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
          ></path>
        </svg>
      </div>
      <h2 class="text-3xl font-bold text-glehi-dark mb-2">
        Espace Administration
      </h2>
      <p class="text-glehi-graymid">
        Connectez-vous pour accéder au panneau d'administration
      </p>
    </div>

    <!-- Formulaire -->
    <div
      class="bg-white/90 backdrop-blur-sm rounded-2xl shadow-2xl p-8 border border-glehi-greenlight4"
    >
      <form class="space-y-6" id="loginForm">
        <!-- Téléphone -->
        <div>
          <label
            for="phone"
            class="block text-sm font-medium text-glehi-dark mb-2"
          >
            Numéro de téléphone
          </label>
          <input
            id="phone"
            name="phone"
            type="tel"
            required
            value="01"
            maxlength="10"
            pattern="01[0-9]{8}"
            class="w-full px-4 py-3 border border-glehi-greenlight4 rounded-xl focus:ring-2 focus:ring-glehi-medium focus:border-glehi-medium bg-white/50 text-glehi-dark"
            placeholder="01XXXXXXXX"
          />
          <div id="phoneError" class="hidden mt-2 text-sm text-red-600">
            Le numéro doit commencer par 01 et contenir exactement 10 chiffres
          </div>
        </div>

        <!-- Mot de passe -->
        <div>
          <label
            for="password"
            class="block text-sm font-medium text-glehi-dark mb-2"
          >
            Mot de passe
          </label>
          <input
            id="password"
            name="password"
            type="password"
            required
            minlength="8"
            class="w-full px-4 py-3 border border-glehi-greenlight4 rounded-xl focus:ring-2 focus:ring-glehi-medium focus:border-glehi-medium bg-white/50 text-glehi-dark"
            placeholder="••••••••"
          />
          <div id="passwordError" class="hidden mt-2 text-sm text-red-600">
            Le mot de passe doit contenir au moins 8 caractères
          </div>
        </div>

        <!-- Se souvenir -->
        <div class="flex items-center justify-between">
          <label class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 text-glehi-medium focus:ring-glehi-medium border-glehi-greenlight4 rounded"
            />
            <span class="ml-2 text-sm text-glehi-graymid"
              >Se souvenir de moi</span
            >
          </label>
          <a
            href="#"
            class="text-sm text-glehi-medium hover:text-glehi-kaki font-medium"
          >
            Mot de passe oublié ?
          </a>
        </div>

        <!-- Bouton -->
        <button
          type="submit"
          id="submitButton"
          class="w-full py-3 px-4 bg-gradient-to-r from-glehi-medium to-glehi-kaki text-white font-medium rounded-xl hover:from-glehi-dark hover:to-glehi-medium focus:outline-none focus:ring-2 focus:ring-glehi-medium shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Se connecter
        </button>

        <!-- Message d'erreur -->
        <div
          id="errorMessage"
          class="hidden bg-red-50 border border-red-200 rounded-lg p-4"
        >
          <div class="flex">
            <svg
              class="h-5 w-5 text-red-400"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"
              ></path>
            </svg>
            <p class="ml-3 text-sm text-red-700" id="errorText">
              Identifiants incorrects. Veuillez réessayer.
            </p>
          </div>
        </div>
      </form>
    </div>

    <!-- Footer -->
    <div class="text-center text-xs text-glehi-graymid">
      <p>© 2025 - Espace Administration Sécurisé</p>
    </div>
  </div>
</div>

<!-- Passage de la variable d'environnement au client -->
<script define:vars={{ API_URL }}>
  // Maintenant API_URL est accessible dans le script côté client

  document.addEventListener("DOMContentLoaded", function () {
    checkAuthStatus();
    setupValidation();
    setupForm();
  });

  // Vérifier si déjà connecté
  function checkAuthStatus() {
    const token = localStorage.getItem("admin_token");
    const userRole = localStorage.getItem("user_role");

    if (token && userRole === "admin") {
      window.location.href = "/admin/dashboard";
    }
  }

  // Validation simple
  function setupValidation() {
    const phoneInput = document.getElementById("phone");
    const passwordInput = document.getElementById("password");
    const submitButton = document.getElementById("submitButton");

    if (!phoneInput || !passwordInput || !submitButton) {
      console.error("Éléments du formulaire non trouvés");
      return;
    }

    function validatePhone() {
      if (!phoneInput) return false;

      const value = phoneInput.value;
      if (!value.startsWith("01")) {
        phoneInput.value = "01" + value.replace(/^01/, "");
      }

      const isValid = /^01[0-9]{8}$/.test(phoneInput.value);
      const phoneError = document.getElementById("phoneError");
      if (phoneError) {
        phoneError.classList.toggle(
          "hidden",
          isValid || phoneInput.value.length <= 2
        );
      }
      return isValid;
    }

    function validatePassword() {
      if (!passwordInput) return false;

      const isValid = passwordInput.value.length >= 8;
      const passwordError = document.getElementById("passwordError");
      if (passwordError) {
        passwordError.classList.toggle(
          "hidden",
          isValid || passwordInput.value.length === 0
        );
      }
      return isValid;
    }

    function updateSubmitButton() {
      if (submitButton) {
        submitButton.disabled = !(validatePhone() && validatePassword());
      }
    }

    phoneInput.addEventListener("input", updateSubmitButton);
    passwordInput.addEventListener("input", updateSubmitButton);

    // Empêcher les caractères non numériques dans le téléphone
    phoneInput.addEventListener("keydown", function (e) {
      const cursorPos = this.selectionStart || 0;
      if ((e.key === "Backspace" || e.key === "Delete") && cursorPos <= 2) {
        e.preventDefault();
        return;
      }
      if (
        !["Backspace", "Delete", "ArrowLeft", "ArrowRight", "Tab"].includes(
          e.key
        ) &&
        !/[0-9]/.test(e.key)
      ) {
        e.preventDefault();
      }
    });
  }

  // Gestion du formulaire
  function setupForm() {
    const form = document.getElementById("loginForm");
    const submitButton = document.getElementById("submitButton");

    if (!form || !submitButton) {
      console.error("Formulaire non trouvé");
      return;
    }

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      const formData = new FormData(this);
      const phone = formData.get("phone");
      const password = formData.get("password");
      const rememberMe = formData.get("remember-me");

      // Désactiver le bouton
      submitButton.disabled = true;
      submitButton.textContent = "Connexion...";

      try {
        console.log("Tentative de connexion avec:", {
          phone: phone?.toString().trim() || "",
          password: password?.toString() || "",
          rememberMe,
          API_URL,
        });

        // Construire l'URL correctement
        const loginUrl = API_URL.endsWith("/")
          ? `${API_URL}auth/login`
          : `${API_URL}/auth/login`;
        console.log("URL de connexion:", loginUrl);

        const response = await fetch(loginUrl, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: JSON.stringify({
            phone: phone?.toString().trim() || "",
            password: password?.toString() || "",
          }),
        });

        console.log(
          "Réponse du serveur:",
          response.status,
          response.statusText
        );

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("Données reçues:", data);

        if (response.ok && data.token && data.user) {
          // Vérifier le rôle
          if (data.user.role !== "admin") {
            showError(
              "Accès refusé. Seuls les administrateurs et agriculteurs peuvent se connecter."
            );
            return;
          }

          // Stocker les données
          localStorage.setItem("admin_token", data.token);
          localStorage.setItem("user_role", data.user.role);
          localStorage.setItem("user_data", JSON.stringify(data.user));

          if (rememberMe) {
            localStorage.setItem("remember_admin", "true");
          }

          // Redirection
          window.location.href = "/admin/dashboard";
        } else {
          showError(
            data.message || "Identifiants incorrects ou accès non autorisé."
          );
        }
      } catch (error) {
        console.error("Erreur de connexion:", error);

        // Messages d'erreur plus spécifiques
        let errorMessage = "Erreur de connexion. Veuillez réessayer.";

        if (
          error.name === "TypeError" &&
          error.message.includes("Failed to fetch")
        ) {
          errorMessage =
            "Impossible de contacter le serveur. Vérifiez votre connexion internet et que le serveur est accessible.";
        } else if (error.message.includes("HTTP error")) {
          errorMessage = `Erreur serveur: ${error.message}`;
        } else if (error.message) {
          errorMessage = error.message;
        }

        showError(errorMessage);
      } finally {
        // Réactiver le bouton
        submitButton.disabled = false;
        submitButton.textContent = "Se connecter";
      }
    });
  }

  // Afficher les erreurs
  function showError(message) {
    const errorDiv = document.getElementById("errorMessage");
    const errorText = document.getElementById("errorText");

    if (!errorDiv || !errorText) {
      console.error("Éléments d'erreur non trouvés");
      return;
    }

    errorText.textContent = message;
    errorDiv.classList.remove("hidden");

    setTimeout(() => {
      errorDiv.classList.add("hidden");
    }, 5000);
  }
</script>
